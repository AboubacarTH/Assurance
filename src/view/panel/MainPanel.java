/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.panel;

import bean.Automobile;
import bean.Classe;
import bean.Compagnie;
import bean.CompagnieGarantie;
import bean.Energie;
import bean.Garantie;
import bean.Groupe;
import bean.MotoMoteur;
import bean.NumberRenderer;
import bean.Police;
import bean.Souscripteur;
import bean.Tarif;
import bean.Telephone;
import bean.Usage;
import bean.VehiculeMoteur;
import bean.Zone;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.time.Period;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import static main.Assurances.getController;
import static main.Assurances.getUser;
import view.dialog.AutomobileDialog;
import view.dialog.CompagnieDialog;
import view.dialog.CompagnieGarantieDialog;
import view.dialog.GarantieDialog;
import view.dialog.PoliceDialog;
import view.dialog.SouscripteurDialog;
import view.frame.MainFrame;

/**
 *
 * @author ATH
 */
public class MainPanel extends javax.swing.JPanel {

    /**
     * Creates new form MainPanel
     */
    public MainPanel() {
        id_souscripteur = 0;
        id_compagnie = 0;
        id_automobiles = new ArrayList<>();
        id_compagnie_garanties = new ArrayList<>();
        initComponents();
        initCB();
        initTable();
        initPop();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup_souscripteur = new javax.swing.JPopupMenu();
        popup_menu_souscripteur_add = new javax.swing.JMenuItem();
        popup_menu_souscripteur_update = new javax.swing.JMenuItem();
        popup_menu_souscripteur_remove = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        popup_menu_souscripteur_select = new javax.swing.JMenuItem();
        buttonGroup = new javax.swing.ButtonGroup();
        popup_compagnie = new javax.swing.JPopupMenu();
        popup_menu_compagnie_add = new javax.swing.JMenuItem();
        popup_menu_compagnie_update = new javax.swing.JMenuItem();
        popup_menu_compagnie_remove = new javax.swing.JMenuItem();
        popup_garantie = new javax.swing.JPopupMenu();
        popup_menu_garantie_add = new javax.swing.JMenuItem();
        popup_menu_garantie_update = new javax.swing.JMenuItem();
        popup_menu_garantie_remove = new javax.swing.JMenuItem();
        popup_compagnie_police = new javax.swing.JPopupMenu();
        popup_menu_compagnie_police_add = new javax.swing.JMenuItem();
        popup_menu_compagnie_police_update = new javax.swing.JMenuItem();
        popup_menu_compagnie_police_remove = new javax.swing.JMenuItem();
        popup_compagnie_garantie = new javax.swing.JPopupMenu();
        popup_menu_compagnie_garantie_add = new javax.swing.JMenuItem();
        popup_menu_compagnie_garantie_update = new javax.swing.JMenuItem();
        popup_menu_compagnie_garantie_remove = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        popup_menu_compagnie_garantie_select = new javax.swing.JMenuItem();
        popup_menu_compagnie_garantie_deselect = new javax.swing.JMenuItem();
        popup_menu_compagnie_garantie_restor = new javax.swing.JMenuItem();
        popup_automobile = new javax.swing.JPopupMenu();
        popup_menu_automobile_add = new javax.swing.JMenuItem();
        popup_menu_automobile_update = new javax.swing.JMenuItem();
        popup_menu_automobile_remove = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        popup_menu_automobile_select = new javax.swing.JMenuItem();
        popup_menu_automobile_deselect = new javax.swing.JMenuItem();
        popup_menu_automobile_restor = new javax.swing.JMenuItem();
        tabbedPane = new javax.swing.JTabbedPane();
        panel_souscripteur = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btn_ajouter_souscripteur = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        scrollPane_souscripteur = new javax.swing.JScrollPane();
        table_souscripteur = new javax.swing.JTable();
        btn_mettre_a_jour_souscripteur = new javax.swing.JButton();
        btn_suprimer_souscripteur = new javax.swing.JButton();
        panel_compagnie_assurance = new javax.swing.JPanel();
        scrollPane_compagnie = new javax.swing.JScrollPane();
        table_compagnie = new javax.swing.JTable();
        panel_compagnie_police = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        combo_compagnie_usage = new javax.swing.JComboBox<>();
        scrollPane_compagnie_police = new javax.swing.JScrollPane();
        table_compagnie_police = new javax.swing.JTable();
        scrollPane_garantie = new javax.swing.JScrollPane();
        table_garantie = new javax.swing.JTable();
        panel_compagnie_garantie = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        combo_compagnie = new javax.swing.JComboBox<>();
        scrollPane_compagnie_garantie = new javax.swing.JScrollPane();
        table_compagnie_garantie = new javax.swing.JTable();
        panel_prime = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        combo_prime_usage = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        combo_classe = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        combo_groupe = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        combo_zone = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        combo_puissance = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        combo_energie = new javax.swing.JComboBox<>();
        radio_btn_vehicule = new javax.swing.JRadioButton();
        radio_btn_moto = new javax.swing.JRadioButton();
        scrollPane_prime = new javax.swing.JScrollPane();
        table_prime = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        textField_recherche = new javax.swing.JTextField();
        panel_automobile = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        scrollPane_automobile = new javax.swing.JScrollPane();
        table_automobile = new javax.swing.JTable();
        tabbedPane_saisie = new javax.swing.JTabbedPane();
        panel_nouvelle_sasie = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        textField_nouvelle_saisie_numero_assure = new javax.swing.JTextField();
        textField_nouvelle_saisie_nom_prenom = new javax.swing.JTextField();
        textField_nouvelle_saisie_numero_telephone = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        textField_nouvelle_saisie_compagnie = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_nouvelle_saisie_garantie = new javax.swing.JTable();
        calendar_prise_effet = new com.toedter.calendar.JCalendar();
        calendar_echeance = new com.toedter.calendar.JCalendar();
        btn_sauvegarder = new javax.swing.JButton();
        btn_sauvegarder_imprimer = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_nouvelle_saisie_police = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        textField_nouvelle_saisie_periode = new javax.swing.JTextField();
        panel_sasies = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        textField_sauvegarde_rechercher = new javax.swing.JTextField();
        btn_sauvegarde_ajouter = new javax.swing.JButton();
        btn_sauvegarde_modifier = new javax.swing.JButton();
        btn_sauvegarde_suprimer = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_sauvegarde_saisie = new javax.swing.JTable();

        popup_menu_souscripteur_add.setText("Ajouter souscripteur");
        popup_menu_souscripteur_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_souscripteur_addActionPerformed(evt);
            }
        });
        popup_souscripteur.add(popup_menu_souscripteur_add);

        popup_menu_souscripteur_update.setText("Mettre Ã  jour souscripteur");
        popup_menu_souscripteur_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_souscripteur_updateActionPerformed(evt);
            }
        });
        popup_souscripteur.add(popup_menu_souscripteur_update);

        popup_menu_souscripteur_remove.setText("Suprimer souscripteur");
        popup_menu_souscripteur_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_souscripteur_removeActionPerformed(evt);
            }
        });
        popup_souscripteur.add(popup_menu_souscripteur_remove);
        popup_souscripteur.add(jSeparator1);

        popup_menu_souscripteur_select.setText("Selectionner le souscripteur");
        popup_menu_souscripteur_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_souscripteur_selectActionPerformed(evt);
            }
        });
        popup_souscripteur.add(popup_menu_souscripteur_select);

        popup_menu_compagnie_add.setText("Ajouter compagnie");
        popup_menu_compagnie_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_addActionPerformed(evt);
            }
        });
        popup_compagnie.add(popup_menu_compagnie_add);

        popup_menu_compagnie_update.setText("Mettre Ã  jour compagnie");
        popup_menu_compagnie_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_updateActionPerformed(evt);
            }
        });
        popup_compagnie.add(popup_menu_compagnie_update);

        popup_menu_compagnie_remove.setText("Suprimer compagnie");
        popup_menu_compagnie_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_removeActionPerformed(evt);
            }
        });
        popup_compagnie.add(popup_menu_compagnie_remove);

        popup_menu_garantie_add.setText("Ajouter garantie");
        popup_menu_garantie_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_garantie_addActionPerformed(evt);
            }
        });
        popup_garantie.add(popup_menu_garantie_add);

        popup_menu_garantie_update.setText("Mettre Ã  jour garantie");
        popup_menu_garantie_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_garantie_updateActionPerformed(evt);
            }
        });
        popup_garantie.add(popup_menu_garantie_update);

        popup_menu_garantie_remove.setText("Suprimer garantie");
        popup_menu_garantie_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_garantie_removeActionPerformed(evt);
            }
        });
        popup_garantie.add(popup_menu_garantie_remove);

        popup_menu_compagnie_police_add.setText("Ajouter compagnie police");
        popup_menu_compagnie_police_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_police_addActionPerformed(evt);
            }
        });
        popup_compagnie_police.add(popup_menu_compagnie_police_add);

        popup_menu_compagnie_police_update.setText("Mettre Ã  jour compagnie police");
        popup_menu_compagnie_police_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_police_updateActionPerformed(evt);
            }
        });
        popup_compagnie_police.add(popup_menu_compagnie_police_update);

        popup_menu_compagnie_police_remove.setText("Suprimer compagnie police");
        popup_menu_compagnie_police_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_police_removeActionPerformed(evt);
            }
        });
        popup_compagnie_police.add(popup_menu_compagnie_police_remove);

        popup_menu_compagnie_garantie_add.setText("Ajouter compagnie garantie");
        popup_menu_compagnie_garantie_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_garantie_addActionPerformed(evt);
            }
        });
        popup_compagnie_garantie.add(popup_menu_compagnie_garantie_add);

        popup_menu_compagnie_garantie_update.setText("Mettre Ã  jour compagnie garantie");
        popup_menu_compagnie_garantie_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_garantie_updateActionPerformed(evt);
            }
        });
        popup_compagnie_garantie.add(popup_menu_compagnie_garantie_update);

        popup_menu_compagnie_garantie_remove.setText("Suprimer compagnie garantie");
        popup_menu_compagnie_garantie_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_garantie_removeActionPerformed(evt);
            }
        });
        popup_compagnie_garantie.add(popup_menu_compagnie_garantie_remove);
        popup_compagnie_garantie.add(jSeparator3);

        popup_menu_compagnie_garantie_select.setText("Selectionner la garantie");
        popup_menu_compagnie_garantie_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_garantie_selectActionPerformed(evt);
            }
        });
        popup_compagnie_garantie.add(popup_menu_compagnie_garantie_select);

        popup_menu_compagnie_garantie_deselect.setText("Retirer la selection");
        popup_menu_compagnie_garantie_deselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_garantie_deselectActionPerformed(evt);
            }
        });
        popup_compagnie_garantie.add(popup_menu_compagnie_garantie_deselect);

        popup_menu_compagnie_garantie_restor.setText("Mettre Ã  zero liste selection");
        popup_menu_compagnie_garantie_restor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_compagnie_garantie_restorActionPerformed(evt);
            }
        });
        popup_compagnie_garantie.add(popup_menu_compagnie_garantie_restor);

        popup_menu_automobile_add.setText("Ajouter automobile");
        popup_menu_automobile_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_automobile_addActionPerformed(evt);
            }
        });
        popup_automobile.add(popup_menu_automobile_add);

        popup_menu_automobile_update.setText("Mettre Ã  jour automobile");
        popup_menu_automobile_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_automobile_updateActionPerformed(evt);
            }
        });
        popup_automobile.add(popup_menu_automobile_update);

        popup_menu_automobile_remove.setText("Suprimer automobile");
        popup_menu_automobile_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_automobile_removeActionPerformed(evt);
            }
        });
        popup_automobile.add(popup_menu_automobile_remove);
        popup_automobile.add(jSeparator2);

        popup_menu_automobile_select.setText("Selectionner pour la saisie");
        popup_menu_automobile_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_automobile_selectActionPerformed(evt);
            }
        });
        popup_automobile.add(popup_menu_automobile_select);

        popup_menu_automobile_deselect.setText("Retirer de la selection saisie");
        popup_menu_automobile_deselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_automobile_deselectActionPerformed(evt);
            }
        });
        popup_automobile.add(popup_menu_automobile_deselect);

        popup_menu_automobile_restor.setText("Mettre Ã  zero liste de selection saisie");
        popup_menu_automobile_restor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_automobile_restorActionPerformed(evt);
            }
        });
        popup_automobile.add(popup_menu_automobile_restor);

        jLabel1.setText("Rechercher");

        btn_ajouter_souscripteur.setText("Ajouter souscripteur");
        btn_ajouter_souscripteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ajouter_souscripteurActionPerformed(evt);
            }
        });

        table_souscripteur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NÂ°", "NumÃ©ro assurÃ©", "Nom et PrÃ©nom", "Type piÃ¨ce", "NumÃ©ro piÃ¨ce", "TÃ©lÃ©phone", "Adresse", "Profession", "PersonalitÃ©", "Exempter taxe", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane_souscripteur.setViewportView(table_souscripteur);
        if (table_souscripteur.getColumnModel().getColumnCount() > 0) {
            table_souscripteur.getColumnModel().getColumn(0).setMinWidth(35);
            table_souscripteur.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_souscripteur.getColumnModel().getColumn(0).setMaxWidth(35);
            table_souscripteur.getColumnModel().getColumn(1).setPreferredWidth(100);
            table_souscripteur.getColumnModel().getColumn(2).setPreferredWidth(300);
            table_souscripteur.getColumnModel().getColumn(3).setPreferredWidth(100);
            table_souscripteur.getColumnModel().getColumn(4).setPreferredWidth(100);
            table_souscripteur.getColumnModel().getColumn(5).setPreferredWidth(150);
            table_souscripteur.getColumnModel().getColumn(6).setPreferredWidth(200);
            table_souscripteur.getColumnModel().getColumn(7).setPreferredWidth(100);
            table_souscripteur.getColumnModel().getColumn(8).setPreferredWidth(100);
            table_souscripteur.getColumnModel().getColumn(9).setPreferredWidth(100);
            table_souscripteur.getColumnModel().getColumn(10).setMinWidth(5);
            table_souscripteur.getColumnModel().getColumn(10).setPreferredWidth(5);
            table_souscripteur.getColumnModel().getColumn(10).setMaxWidth(5);
        }

        btn_mettre_a_jour_souscripteur.setText("Modifier souscripteur");
        btn_mettre_a_jour_souscripteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mettre_a_jour_souscripteurActionPerformed(evt);
            }
        });

        btn_suprimer_souscripteur.setText("Suprimer souscripteur");
        btn_suprimer_souscripteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suprimer_souscripteurActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_souscripteurLayout = new javax.swing.GroupLayout(panel_souscripteur);
        panel_souscripteur.setLayout(panel_souscripteurLayout);
        panel_souscripteurLayout.setHorizontalGroup(
            panel_souscripteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_souscripteurLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_ajouter_souscripteur)
                .addGap(18, 18, 18)
                .addComponent(btn_mettre_a_jour_souscripteur)
                .addGap(18, 18, 18)
                .addComponent(btn_suprimer_souscripteur)
                .addContainerGap(78, Short.MAX_VALUE))
            .addComponent(scrollPane_souscripteur, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        panel_souscripteurLayout.setVerticalGroup(
            panel_souscripteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_souscripteurLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_souscripteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(panel_souscripteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_ajouter_souscripteur)
                        .addComponent(btn_mettre_a_jour_souscripteur)
                        .addComponent(btn_suprimer_souscripteur)))
                .addGap(18, 18, 18)
                .addComponent(scrollPane_souscripteur, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Souscripteur", panel_souscripteur);

        scrollPane_compagnie.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Table des compagnies d'assurance"));

        table_compagnie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "NÂ°", "Compagnie"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane_compagnie.setViewportView(table_compagnie);
        if (table_compagnie.getColumnModel().getColumnCount() > 0) {
            table_compagnie.getColumnModel().getColumn(0).setMinWidth(35);
            table_compagnie.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_compagnie.getColumnModel().getColumn(0).setMaxWidth(35);
        }

        panel_compagnie_police.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Table compagnies NÂ°Police"));

        jLabel2.setText("Usage Auto");

        combo_compagnie_usage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        table_compagnie_police.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NÂ°", "Usage", "Compagnie", "Police", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane_compagnie_police.setViewportView(table_compagnie_police);
        if (table_compagnie_police.getColumnModel().getColumnCount() > 0) {
            table_compagnie_police.getColumnModel().getColumn(0).setMinWidth(35);
            table_compagnie_police.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_compagnie_police.getColumnModel().getColumn(0).setMaxWidth(35);
            table_compagnie_police.getColumnModel().getColumn(3).setMinWidth(100);
            table_compagnie_police.getColumnModel().getColumn(3).setPreferredWidth(100);
            table_compagnie_police.getColumnModel().getColumn(3).setMaxWidth(100);
            table_compagnie_police.getColumnModel().getColumn(4).setMinWidth(5);
            table_compagnie_police.getColumnModel().getColumn(4).setPreferredWidth(5);
            table_compagnie_police.getColumnModel().getColumn(4).setMaxWidth(5);
        }

        javax.swing.GroupLayout panel_compagnie_policeLayout = new javax.swing.GroupLayout(panel_compagnie_police);
        panel_compagnie_police.setLayout(panel_compagnie_policeLayout);
        panel_compagnie_policeLayout.setHorizontalGroup(
            panel_compagnie_policeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_compagnie_policeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_compagnie_policeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane_compagnie_police, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE)
                    .addGroup(panel_compagnie_policeLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(combo_compagnie_usage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_compagnie_policeLayout.setVerticalGroup(
            panel_compagnie_policeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_compagnie_policeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_compagnie_policeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_compagnie_usage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(scrollPane_compagnie_police, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addContainerGap())
        );

        scrollPane_garantie.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Table des garanties"));

        table_garantie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "NÂ°", "Garantie"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane_garantie.setViewportView(table_garantie);
        if (table_garantie.getColumnModel().getColumnCount() > 0) {
            table_garantie.getColumnModel().getColumn(0).setMinWidth(35);
            table_garantie.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_garantie.getColumnModel().getColumn(0).setMaxWidth(35);
        }

        panel_compagnie_garantie.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Table compagnies garanties"));

        jLabel3.setText("Compagnie");

        combo_compagnie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_compagnie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_compagnieActionPerformed(evt);
            }
        });

        table_compagnie_garantie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NÂ°", "Compagnie", "Garantie", "Montant", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane_compagnie_garantie.setViewportView(table_compagnie_garantie);
        if (table_compagnie_garantie.getColumnModel().getColumnCount() > 0) {
            table_compagnie_garantie.getColumnModel().getColumn(0).setMinWidth(35);
            table_compagnie_garantie.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_compagnie_garantie.getColumnModel().getColumn(0).setMaxWidth(35);
            table_compagnie_garantie.getColumnModel().getColumn(3).setMinWidth(100);
            table_compagnie_garantie.getColumnModel().getColumn(3).setPreferredWidth(100);
            table_compagnie_garantie.getColumnModel().getColumn(3).setMaxWidth(100);
            table_compagnie_garantie.getColumnModel().getColumn(4).setMinWidth(5);
            table_compagnie_garantie.getColumnModel().getColumn(4).setPreferredWidth(5);
            table_compagnie_garantie.getColumnModel().getColumn(4).setMaxWidth(5);
        }

        javax.swing.GroupLayout panel_compagnie_garantieLayout = new javax.swing.GroupLayout(panel_compagnie_garantie);
        panel_compagnie_garantie.setLayout(panel_compagnie_garantieLayout);
        panel_compagnie_garantieLayout.setHorizontalGroup(
            panel_compagnie_garantieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_compagnie_garantieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_compagnie_garantieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane_compagnie_garantie)
                    .addGroup(panel_compagnie_garantieLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(combo_compagnie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_compagnie_garantieLayout.setVerticalGroup(
            panel_compagnie_garantieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_compagnie_garantieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_compagnie_garantieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_compagnie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(scrollPane_compagnie_garantie, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel_compagnie_assuranceLayout = new javax.swing.GroupLayout(panel_compagnie_assurance);
        panel_compagnie_assurance.setLayout(panel_compagnie_assuranceLayout);
        panel_compagnie_assuranceLayout.setHorizontalGroup(
            panel_compagnie_assuranceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_compagnie_assuranceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_compagnie_assuranceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_compagnie_assuranceLayout.createSequentialGroup()
                        .addComponent(scrollPane_compagnie, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panel_compagnie_police, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panel_compagnie_assuranceLayout.createSequentialGroup()
                        .addComponent(scrollPane_garantie, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panel_compagnie_garantie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_compagnie_assuranceLayout.setVerticalGroup(
            panel_compagnie_assuranceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_compagnie_assuranceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_compagnie_assuranceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrollPane_compagnie, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(panel_compagnie_police, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panel_compagnie_assuranceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane_garantie, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(panel_compagnie_garantie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabbedPane.addTab("Compagnie assurance", panel_compagnie_assurance);

        jLabel4.setText("Usage");

        combo_prime_usage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_prime_usageActionPerformed(evt);
            }
        });

        jLabel5.setText("Classe");

        combo_classe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_classeActionPerformed(evt);
            }
        });

        jLabel6.setText("Groupe");

        combo_groupe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_groupeActionPerformed(evt);
            }
        });

        jLabel7.setText("Zone");

        combo_zone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_zoneActionPerformed(evt);
            }
        });

        jLabel8.setText("Puissance");

        combo_puissance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_puissanceActionPerformed(evt);
            }
        });

        jLabel9.setText("Energie");

        combo_energie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_energieActionPerformed(evt);
            }
        });

        buttonGroup.add(radio_btn_vehicule);
        radio_btn_vehicule.setSelected(true);
        radio_btn_vehicule.setText("VÃ©hicule");
        radio_btn_vehicule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_btn_vehiculeActionPerformed(evt);
            }
        });

        buttonGroup.add(radio_btn_moto);
        radio_btn_moto.setText("Moto");
        radio_btn_moto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_btn_motoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(combo_prime_usage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(combo_classe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(combo_groupe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(combo_zone, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(combo_puissance, 0, 148, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(combo_energie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radio_btn_vehicule)
                        .addGap(18, 18, 18)
                        .addComponent(radio_btn_moto)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_btn_vehicule)
                    .addComponent(radio_btn_moto))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_prime_usage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(combo_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(combo_groupe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(combo_zone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(combo_energie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(combo_puissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        table_prime.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NÂ°", "Usage", "Classe", "Groupe", "Zone", "Puissance", "Energie", "Tarif", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane_prime.setViewportView(table_prime);
        if (table_prime.getColumnModel().getColumnCount() > 0) {
            table_prime.getColumnModel().getColumn(0).setMinWidth(35);
            table_prime.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_prime.getColumnModel().getColumn(0).setMaxWidth(35);
            table_prime.getColumnModel().getColumn(1).setPreferredWidth(250);
            table_prime.getColumnModel().getColumn(5).setPreferredWidth(200);
            table_prime.getColumnModel().getColumn(7).setMinWidth(100);
            table_prime.getColumnModel().getColumn(7).setPreferredWidth(120);
            table_prime.getColumnModel().getColumn(8).setMinWidth(5);
            table_prime.getColumnModel().getColumn(8).setPreferredWidth(5);
            table_prime.getColumnModel().getColumn(8).setMaxWidth(5);
        }

        jLabel10.setText("Rechercher");

        javax.swing.GroupLayout panel_primeLayout = new javax.swing.GroupLayout(panel_prime);
        panel_prime.setLayout(panel_primeLayout);
        panel_primeLayout.setHorizontalGroup(
            panel_primeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_primeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panel_primeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane_prime, javax.swing.GroupLayout.DEFAULT_SIZE, 837, Short.MAX_VALUE)
                    .addGroup(panel_primeLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(textField_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_primeLayout.setVerticalGroup(
            panel_primeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_primeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_primeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_primeLayout.createSequentialGroup()
                        .addGroup(panel_primeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(textField_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(scrollPane_prime, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabbedPane.addTab("Prime", panel_prime);

        jLabel11.setText("Rechercher");

        jButton1.setText("Ajouter automobile");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Modifier automobile");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Suprimer automobile");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        table_automobile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NÂ°", "NÂ° Plaque", "Type", "Marque", "NÂ° Chassis", "Date 1Ã¨re mise circulation", "Nombre de place", "Charge utile", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane_automobile.setViewportView(table_automobile);
        if (table_automobile.getColumnModel().getColumnCount() > 0) {
            table_automobile.getColumnModel().getColumn(0).setMinWidth(35);
            table_automobile.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_automobile.getColumnModel().getColumn(0).setMaxWidth(35);
            table_automobile.getColumnModel().getColumn(8).setMinWidth(5);
            table_automobile.getColumnModel().getColumn(8).setPreferredWidth(5);
            table_automobile.getColumnModel().getColumn(8).setMaxWidth(5);
        }

        javax.swing.GroupLayout panel_automobileLayout = new javax.swing.GroupLayout(panel_automobile);
        panel_automobile.setLayout(panel_automobileLayout);
        panel_automobileLayout.setHorizontalGroup(
            panel_automobileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_automobileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_automobileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane_automobile)
                    .addGroup(panel_automobileLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 148, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_automobileLayout.setVerticalGroup(
            panel_automobileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_automobileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_automobileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_automobileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)
                        .addComponent(jButton3))
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addComponent(scrollPane_automobile, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPane.addTab("Automobile", panel_automobile);

        tabbedPane_saisie.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Souscripteur"));

        jLabel12.setText("NumÃ©ro assurÃ©");

        jLabel13.setText("Nom et PrÃ©nom");

        jLabel14.setText("NumÃ©ro(s) de tÃ©lÃ©phone");

        textField_nouvelle_saisie_numero_assure.setEditable(false);

        textField_nouvelle_saisie_nom_prenom.setEditable(false);

        textField_nouvelle_saisie_numero_telephone.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textField_nouvelle_saisie_numero_assure, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                    .addComponent(textField_nouvelle_saisie_nom_prenom)
                    .addComponent(textField_nouvelle_saisie_numero_telephone))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(textField_nouvelle_saisie_numero_assure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(textField_nouvelle_saisie_nom_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(textField_nouvelle_saisie_numero_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Compagnie d'assurance et garantie"));

        jLabel15.setText("Compagnie");

        textField_nouvelle_saisie_compagnie.setEditable(false);

        table_nouvelle_saisie_garantie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NÂ°", "Garantie", "Montant", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_nouvelle_saisie_garantie);
        if (table_nouvelle_saisie_garantie.getColumnModel().getColumnCount() > 0) {
            table_nouvelle_saisie_garantie.getColumnModel().getColumn(0).setMinWidth(35);
            table_nouvelle_saisie_garantie.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_nouvelle_saisie_garantie.getColumnModel().getColumn(0).setMaxWidth(35);
            table_nouvelle_saisie_garantie.getColumnModel().getColumn(3).setMinWidth(5);
            table_nouvelle_saisie_garantie.getColumnModel().getColumn(3).setPreferredWidth(5);
            table_nouvelle_saisie_garantie.getColumnModel().getColumn(3).setMaxWidth(5);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(textField_nouvelle_saisie_compagnie, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(textField_nouvelle_saisie_compagnie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        calendar_prise_effet.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Date de prise d'effet"));
        calendar_prise_effet.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calendar_prise_effetPropertyChange(evt);
            }
        });

        calendar_echeance.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Date d'echeance"));
        calendar_echeance.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calendar_echeancePropertyChange(evt);
            }
        });

        btn_sauvegarder.setText("Sauvegarder");

        btn_sauvegarder_imprimer.setText("Sauvegarder et imprimer");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "NumÃ©ro police"));

        table_nouvelle_saisie_police.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NÂ°", "NÂ° Plaque", "NÂ° Police", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(table_nouvelle_saisie_police);
        if (table_nouvelle_saisie_police.getColumnModel().getColumnCount() > 0) {
            table_nouvelle_saisie_police.getColumnModel().getColumn(0).setMinWidth(35);
            table_nouvelle_saisie_police.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_nouvelle_saisie_police.getColumnModel().getColumn(0).setMaxWidth(35);
            table_nouvelle_saisie_police.getColumnModel().getColumn(3).setMinWidth(5);
            table_nouvelle_saisie_police.getColumnModel().getColumn(3).setPreferredWidth(5);
            table_nouvelle_saisie_police.getColumnModel().getColumn(3).setMaxWidth(5);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
        );

        jLabel16.setText("PÃ©riode ");

        textField_nouvelle_saisie_periode.setEditable(false);
        textField_nouvelle_saisie_periode.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        javax.swing.GroupLayout panel_nouvelle_sasieLayout = new javax.swing.GroupLayout(panel_nouvelle_sasie);
        panel_nouvelle_sasie.setLayout(panel_nouvelle_sasieLayout);
        panel_nouvelle_sasieLayout.setHorizontalGroup(
            panel_nouvelle_sasieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_nouvelle_sasieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_nouvelle_sasieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calendar_echeance, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(calendar_prise_effet, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel_nouvelle_sasieLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(textField_nouvelle_saisie_periode, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_nouvelle_sasieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel_nouvelle_sasieLayout.createSequentialGroup()
                        .addComponent(btn_sauvegarder, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_sauvegarder_imprimer)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_nouvelle_sasieLayout.setVerticalGroup(
            panel_nouvelle_sasieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_nouvelle_sasieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_nouvelle_sasieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_nouvelle_sasieLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(calendar_prise_effet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(calendar_echeance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_nouvelle_sasieLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(panel_nouvelle_sasieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_nouvelle_sasieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_sauvegarder)
                        .addComponent(btn_sauvegarder_imprimer))
                    .addComponent(jLabel16)
                    .addComponent(textField_nouvelle_saisie_periode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(116, 116, 116))
        );

        tabbedPane_saisie.addTab("Nouvelle saisie", panel_nouvelle_sasie);

        jLabel18.setText("Rechercher");

        btn_sauvegarde_ajouter.setText("Ajouter nouvelle saisie");

        btn_sauvegarde_modifier.setText("Modifier la saisie");

        btn_sauvegarde_suprimer.setText("Suprimer la saisie");

        table_sauvegarde_saisie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "NÂ°", "Souscripteur", "NÂ° assurÃ©", "NÂ° police", "NÂ° Plaque auto", "Date effet", "Date echeance", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_sauvegarde_saisie);
        if (table_sauvegarde_saisie.getColumnModel().getColumnCount() > 0) {
            table_sauvegarde_saisie.getColumnModel().getColumn(0).setMinWidth(35);
            table_sauvegarde_saisie.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_sauvegarde_saisie.getColumnModel().getColumn(0).setMaxWidth(35);
            table_sauvegarde_saisie.getColumnModel().getColumn(2).setMinWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(2).setPreferredWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(2).setMaxWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(3).setMinWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(3).setPreferredWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(3).setMaxWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(4).setMinWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(4).setPreferredWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(4).setMaxWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(5).setMinWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(5).setPreferredWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(5).setMaxWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(6).setMinWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(6).setPreferredWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(6).setMaxWidth(150);
            table_sauvegarde_saisie.getColumnModel().getColumn(7).setMinWidth(5);
            table_sauvegarde_saisie.getColumnModel().getColumn(7).setPreferredWidth(5);
            table_sauvegarde_saisie.getColumnModel().getColumn(7).setMaxWidth(5);
        }

        javax.swing.GroupLayout panel_sasiesLayout = new javax.swing.GroupLayout(panel_sasies);
        panel_sasies.setLayout(panel_sasiesLayout);
        panel_sasiesLayout.setHorizontalGroup(
            panel_sasiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_sasiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_sasiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(panel_sasiesLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(textField_sauvegarde_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_sauvegarde_ajouter)
                        .addGap(18, 18, 18)
                        .addComponent(btn_sauvegarde_modifier)
                        .addGap(18, 18, 18)
                        .addComponent(btn_sauvegarde_suprimer)
                        .addGap(0, 142, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panel_sasiesLayout.setVerticalGroup(
            panel_sasiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_sasiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_sasiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_sasiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textField_sauvegarde_rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_sauvegarde_ajouter)
                        .addComponent(btn_sauvegarde_modifier)
                        .addComponent(btn_sauvegarde_suprimer))
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabbedPane_saisie.addTab("Saisies enrÃ©gistrÃ©es", panel_sasies);

        tabbedPane.addTab("Saisie", tabbedPane_saisie);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPane)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ajouter_souscripteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ajouter_souscripteurActionPerformed
        ajout_souscripteur();
    }//GEN-LAST:event_btn_ajouter_souscripteurActionPerformed

    private void popup_menu_souscripteur_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_souscripteur_addActionPerformed
        ajout_souscripteur();
    }//GEN-LAST:event_popup_menu_souscripteur_addActionPerformed

    private void popup_menu_souscripteur_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_souscripteur_updateActionPerformed
        mettre_a_jour_souscripteur(table_souscripteur.getSelectedRow());
    }//GEN-LAST:event_popup_menu_souscripteur_updateActionPerformed

    private void popup_menu_souscripteur_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_souscripteur_removeActionPerformed
        suprimer_souscripteur(table_souscripteur.getSelectedRow());
    }//GEN-LAST:event_popup_menu_souscripteur_removeActionPerformed

    private void btn_mettre_a_jour_souscripteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mettre_a_jour_souscripteurActionPerformed
        mettre_a_jour_souscripteur(table_souscripteur.getSelectedRow());
    }//GEN-LAST:event_btn_mettre_a_jour_souscripteurActionPerformed

    private void btn_suprimer_souscripteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suprimer_souscripteurActionPerformed
        suprimer_souscripteur(table_souscripteur.getSelectedRow());
    }//GEN-LAST:event_btn_suprimer_souscripteurActionPerformed

    private void combo_energieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_energieActionPerformed
        initCBPuissance();
        updateTablePrime();
    }//GEN-LAST:event_combo_energieActionPerformed

    private void radio_btn_vehiculeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_btn_vehiculeActionPerformed
        initCBPuissance();
        combo_energie.setEnabled(true);
        updateTablePrime();
    }//GEN-LAST:event_radio_btn_vehiculeActionPerformed

    private void radio_btn_motoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_btn_motoActionPerformed
        initCBPuissance();
        combo_energie.setEnabled(false);
        updateTablePrime();
    }//GEN-LAST:event_radio_btn_motoActionPerformed

    private void combo_prime_usageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_prime_usageActionPerformed
        updateTablePrime();
    }//GEN-LAST:event_combo_prime_usageActionPerformed

    private void combo_classeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_classeActionPerformed
        updateTablePrime();
    }//GEN-LAST:event_combo_classeActionPerformed

    private void combo_groupeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_groupeActionPerformed
        updateTablePrime();
    }//GEN-LAST:event_combo_groupeActionPerformed

    private void combo_zoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_zoneActionPerformed
        updateTablePrime();
    }//GEN-LAST:event_combo_zoneActionPerformed

    private void combo_puissanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_puissanceActionPerformed
        updateTablePrime();
    }//GEN-LAST:event_combo_puissanceActionPerformed

    private void popup_menu_compagnie_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_addActionPerformed
        ajout_compagnie();
    }//GEN-LAST:event_popup_menu_compagnie_addActionPerformed

    private void popup_menu_compagnie_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_updateActionPerformed
        mettre_a_jour_compagnie(table_compagnie.getSelectedRow());
    }//GEN-LAST:event_popup_menu_compagnie_updateActionPerformed

    private void popup_menu_compagnie_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_removeActionPerformed
        suprimer_compagnie(table_compagnie.getSelectedRow());
    }//GEN-LAST:event_popup_menu_compagnie_removeActionPerformed

    private void popup_menu_garantie_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_garantie_addActionPerformed
        ajout_garantie();
    }//GEN-LAST:event_popup_menu_garantie_addActionPerformed

    private void popup_menu_garantie_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_garantie_updateActionPerformed
        mettre_a_jour_garantie(table_garantie.getSelectedRow());
    }//GEN-LAST:event_popup_menu_garantie_updateActionPerformed

    private void popup_menu_garantie_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_garantie_removeActionPerformed
        suprimer_garantie(table_garantie.getSelectedRow());
    }//GEN-LAST:event_popup_menu_garantie_removeActionPerformed

    private void popup_menu_compagnie_police_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_police_addActionPerformed
        ajout_police();
    }//GEN-LAST:event_popup_menu_compagnie_police_addActionPerformed

    private void popup_menu_compagnie_police_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_police_updateActionPerformed
        mettre_a_jour_police(table_compagnie_police.getSelectedRow());
    }//GEN-LAST:event_popup_menu_compagnie_police_updateActionPerformed

    private void popup_menu_compagnie_police_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_police_removeActionPerformed
        suprimer_police(table_compagnie_police.getSelectedRow());
    }//GEN-LAST:event_popup_menu_compagnie_police_removeActionPerformed

    private void popup_menu_compagnie_garantie_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_garantie_addActionPerformed
        ajout_compagnie_garantie();
    }//GEN-LAST:event_popup_menu_compagnie_garantie_addActionPerformed

    private void popup_menu_compagnie_garantie_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_garantie_updateActionPerformed
        mettre_a_jour_compagnie_garantie(table_compagnie_garantie.getSelectedRow());
    }//GEN-LAST:event_popup_menu_compagnie_garantie_updateActionPerformed

    private void popup_menu_compagnie_garantie_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_garantie_removeActionPerformed
        suprimer_compagnie_garantie(table_compagnie_garantie.getSelectedRow());
    }//GEN-LAST:event_popup_menu_compagnie_garantie_removeActionPerformed

    private void popup_menu_automobile_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_automobile_addActionPerformed
        ajout_automobile();
    }//GEN-LAST:event_popup_menu_automobile_addActionPerformed

    private void popup_menu_automobile_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_automobile_updateActionPerformed
        mettre_a_jour_automobile(table_automobile.getSelectedRow());
    }//GEN-LAST:event_popup_menu_automobile_updateActionPerformed

    private void popup_menu_automobile_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_automobile_removeActionPerformed
        suprimer_automobile(table_automobile.getSelectedRow());
    }//GEN-LAST:event_popup_menu_automobile_removeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ajout_automobile();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        mettre_a_jour_automobile(table_automobile.getSelectedRow());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        suprimer_automobile(table_automobile.getSelectedRow());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void popup_menu_souscripteur_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_souscripteur_selectActionPerformed
        selection_souscripteur(table_souscripteur.getSelectedRow());
    }//GEN-LAST:event_popup_menu_souscripteur_selectActionPerformed

    private void calendar_prise_effetPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calendar_prise_effetPropertyChange
        updatetableSaisieGarantie();
    }//GEN-LAST:event_calendar_prise_effetPropertyChange

    private void calendar_echeancePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calendar_echeancePropertyChange
        updatetableSaisieGarantie();
    }//GEN-LAST:event_calendar_echeancePropertyChange

    private void popup_menu_automobile_restorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_automobile_restorActionPerformed
        id_automobiles = new ArrayList<>();
        updatetableSaisieGarantie();
    }//GEN-LAST:event_popup_menu_automobile_restorActionPerformed

    private void popup_menu_automobile_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_automobile_selectActionPerformed
        if (table_automobile.getSelectedRows().length > 0) {
            if (MainFrame.getMono()) {
                if (table_automobile.getSelectedRows().length > 1 || id_automobiles.size() == 1) {
                    mono_information();
                    return;
                }
            }

            for (int index : table_automobile.getSelectedRows()) {
                if (!id_automobiles.contains(Long.parseLong(table_automobile.getValueAt(index, table_automobile.getColumnCount() - 1).toString()))) {
                    id_automobiles.add(Long.parseLong(table_automobile.getValueAt(index, table_automobile.getColumnCount() - 1).toString()));
                }
            }
            JOptionPane.showMessageDialog(this, "Automobile(s) selectionnÃ©(s) avec success ", "OpÃ©ration success !", JOptionPane.INFORMATION_MESSAGE);
            updatetableSaisieGarantie();
        }

    }//GEN-LAST:event_popup_menu_automobile_selectActionPerformed

    private void popup_menu_automobile_deselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_automobile_deselectActionPerformed
        if (table_automobile.getSelectedRows().length > 0) {
            for (int index : table_automobile.getSelectedRows()) {
                if (id_automobiles.contains(Long.parseLong(table_automobile.getValueAt(index, table_automobile.getColumnCount() - 1).toString()))) {
                    id_automobiles.remove(Long.parseLong(table_automobile.getValueAt(index, table_automobile.getColumnCount() - 1).toString()));
                }
            }
            JOptionPane.showMessageDialog(this, "Garantie(s) dÃ©selectionnÃ©(s) avec success ", "OpÃ©ration success !", JOptionPane.INFORMATION_MESSAGE);
            updatetableSaisieGarantie();
        }

    }//GEN-LAST:event_popup_menu_automobile_deselectActionPerformed

    private void popup_menu_compagnie_garantie_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_garantie_selectActionPerformed
        if (table_compagnie_garantie.getSelectedRows().length > 0) {
            for (int index : table_compagnie_garantie.getSelectedRows()) {
                if (!id_compagnie_garanties.contains(Long.parseLong(table_compagnie_garantie.getValueAt(index, table_compagnie_garantie.getColumnCount() - 1).toString()))) {
                    id_compagnie_garanties.add(Long.parseLong(table_compagnie_garantie.getValueAt(index, table_compagnie_garantie.getColumnCount() - 1).toString()));
                }
            }
            JOptionPane.showMessageDialog(this, "Garantie(s) selectionnÃ©(s) avec success ", "OpÃ©ration success !", JOptionPane.INFORMATION_MESSAGE);
            updatetableSaisieGarantie();
        }

    }//GEN-LAST:event_popup_menu_compagnie_garantie_selectActionPerformed

    private void popup_menu_compagnie_garantie_deselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_garantie_deselectActionPerformed
        if (table_compagnie_garantie.getSelectedRows().length > 0) {
            for (int index : table_compagnie_garantie.getSelectedRows()) {
                if (id_compagnie_garanties.contains(Long.parseLong(table_compagnie_garantie.getValueAt(index, table_compagnie_garantie.getColumnCount() - 1).toString()))) {
                    id_compagnie_garanties.remove(Long.parseLong(table_compagnie_garantie.getValueAt(index, table_compagnie_garantie.getColumnCount() - 1).toString()));
                }
            }
            JOptionPane.showMessageDialog(this, "Garantie(s) dÃ©selectionnÃ©(s) avec success ", "OpÃ©ration success !", JOptionPane.INFORMATION_MESSAGE);
            updatetableSaisieGarantie();
        }
    }//GEN-LAST:event_popup_menu_compagnie_garantie_deselectActionPerformed

    private void popup_menu_compagnie_garantie_restorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_compagnie_garantie_restorActionPerformed
        id_compagnie_garanties = new ArrayList<>();
        updatetableSaisieGarantie();
    }//GEN-LAST:event_popup_menu_compagnie_garantie_restorActionPerformed

    private void combo_compagnieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_compagnieActionPerformed
        id_compagnie = 0;
        textField_nouvelle_saisie_compagnie.setText("");
        if (combo_compagnie.getSelectedIndex() > -1) {
            Compagnie compagnie = getController().getCompagnieController().getCompagnie(combo_compagnie.getSelectedItem().toString());
            if (compagnie != null) {
                id_compagnie = compagnie.getId();
                textField_nouvelle_saisie_compagnie.setText(compagnie.getCompagnie());
            }
            id_compagnie_garanties = new ArrayList<>();
            updatetableSaisieGarantie();
            updateTableCompagnieGarantie();
        }

    }//GEN-LAST:event_combo_compagnieActionPerformed
    private long id_souscripteur;
    private long id_compagnie;
    private ArrayList<Long> id_automobiles;
    private ArrayList<Long> id_compagnie_garanties;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_ajouter_souscripteur;
    private javax.swing.JButton btn_mettre_a_jour_souscripteur;
    private javax.swing.JButton btn_sauvegarde_ajouter;
    private javax.swing.JButton btn_sauvegarde_modifier;
    private javax.swing.JButton btn_sauvegarde_suprimer;
    private javax.swing.JButton btn_sauvegarder;
    private javax.swing.JButton btn_sauvegarder_imprimer;
    private javax.swing.JButton btn_suprimer_souscripteur;
    private javax.swing.ButtonGroup buttonGroup;
    private com.toedter.calendar.JCalendar calendar_echeance;
    private com.toedter.calendar.JCalendar calendar_prise_effet;
    private javax.swing.JComboBox<String> combo_classe;
    private javax.swing.JComboBox<String> combo_compagnie;
    private javax.swing.JComboBox<String> combo_compagnie_usage;
    private javax.swing.JComboBox<String> combo_energie;
    private javax.swing.JComboBox<String> combo_groupe;
    private javax.swing.JComboBox<String> combo_prime_usage;
    private javax.swing.JComboBox<String> combo_puissance;
    private javax.swing.JComboBox<String> combo_zone;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel panel_automobile;
    private javax.swing.JPanel panel_compagnie_assurance;
    private javax.swing.JPanel panel_compagnie_garantie;
    private javax.swing.JPanel panel_compagnie_police;
    private javax.swing.JPanel panel_nouvelle_sasie;
    private javax.swing.JPanel panel_prime;
    private javax.swing.JPanel panel_sasies;
    private javax.swing.JPanel panel_souscripteur;
    private javax.swing.JPopupMenu popup_automobile;
    private javax.swing.JPopupMenu popup_compagnie;
    private javax.swing.JPopupMenu popup_compagnie_garantie;
    private javax.swing.JPopupMenu popup_compagnie_police;
    private javax.swing.JPopupMenu popup_garantie;
    private javax.swing.JMenuItem popup_menu_automobile_add;
    private javax.swing.JMenuItem popup_menu_automobile_deselect;
    private javax.swing.JMenuItem popup_menu_automobile_remove;
    private javax.swing.JMenuItem popup_menu_automobile_restor;
    private javax.swing.JMenuItem popup_menu_automobile_select;
    private javax.swing.JMenuItem popup_menu_automobile_update;
    private javax.swing.JMenuItem popup_menu_compagnie_add;
    private javax.swing.JMenuItem popup_menu_compagnie_garantie_add;
    private javax.swing.JMenuItem popup_menu_compagnie_garantie_deselect;
    private javax.swing.JMenuItem popup_menu_compagnie_garantie_remove;
    private javax.swing.JMenuItem popup_menu_compagnie_garantie_restor;
    private javax.swing.JMenuItem popup_menu_compagnie_garantie_select;
    private javax.swing.JMenuItem popup_menu_compagnie_garantie_update;
    private javax.swing.JMenuItem popup_menu_compagnie_police_add;
    private javax.swing.JMenuItem popup_menu_compagnie_police_remove;
    private javax.swing.JMenuItem popup_menu_compagnie_police_update;
    private javax.swing.JMenuItem popup_menu_compagnie_remove;
    private javax.swing.JMenuItem popup_menu_compagnie_update;
    private javax.swing.JMenuItem popup_menu_garantie_add;
    private javax.swing.JMenuItem popup_menu_garantie_remove;
    private javax.swing.JMenuItem popup_menu_garantie_update;
    private javax.swing.JMenuItem popup_menu_souscripteur_add;
    private javax.swing.JMenuItem popup_menu_souscripteur_remove;
    private javax.swing.JMenuItem popup_menu_souscripteur_select;
    private javax.swing.JMenuItem popup_menu_souscripteur_update;
    private javax.swing.JPopupMenu popup_souscripteur;
    private javax.swing.JRadioButton radio_btn_moto;
    private javax.swing.JRadioButton radio_btn_vehicule;
    private javax.swing.JScrollPane scrollPane_automobile;
    private javax.swing.JScrollPane scrollPane_compagnie;
    private javax.swing.JScrollPane scrollPane_compagnie_garantie;
    private javax.swing.JScrollPane scrollPane_compagnie_police;
    private javax.swing.JScrollPane scrollPane_garantie;
    private javax.swing.JScrollPane scrollPane_prime;
    private javax.swing.JScrollPane scrollPane_souscripteur;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTabbedPane tabbedPane_saisie;
    private javax.swing.JTable table_automobile;
    private javax.swing.JTable table_compagnie;
    private javax.swing.JTable table_compagnie_garantie;
    private javax.swing.JTable table_compagnie_police;
    private javax.swing.JTable table_garantie;
    private javax.swing.JTable table_nouvelle_saisie_garantie;
    private javax.swing.JTable table_nouvelle_saisie_police;
    private javax.swing.JTable table_prime;
    private javax.swing.JTable table_sauvegarde_saisie;
    private javax.swing.JTable table_souscripteur;
    private javax.swing.JTextField textField_nouvelle_saisie_compagnie;
    private javax.swing.JTextField textField_nouvelle_saisie_nom_prenom;
    private javax.swing.JTextField textField_nouvelle_saisie_numero_assure;
    private javax.swing.JTextField textField_nouvelle_saisie_numero_telephone;
    private javax.swing.JTextField textField_nouvelle_saisie_periode;
    private javax.swing.JTextField textField_recherche;
    private javax.swing.JTextField textField_sauvegarde_rechercher;
    // End of variables declaration//GEN-END:variables

    private static void addPopup(Component component, final JPopupMenu popup) {
        component.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    showMenu(e);
                }
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    showMenu(e);
                }
            }

            private void showMenu(MouseEvent e) {
                popup.show(e.getComponent(), e.getX(), e.getY());
            }
        });
    }

    private void initPop() {
        addPopup(table_souscripteur, popup_souscripteur);
        addPopup(scrollPane_souscripteur, popup_souscripteur);

        addPopup(table_compagnie, popup_compagnie);
        addPopup(scrollPane_compagnie, popup_compagnie);

        addPopup(table_garantie, popup_garantie);
        addPopup(scrollPane_garantie, popup_garantie);

        addPopup(table_compagnie_police, popup_compagnie_police);
        addPopup(scrollPane_compagnie_police, popup_compagnie_police);

        addPopup(table_compagnie_garantie, popup_compagnie_garantie);
        addPopup(scrollPane_compagnie_garantie, popup_compagnie_garantie);

        addPopup(scrollPane_automobile, popup_automobile);
        addPopup(table_automobile, popup_automobile);
    }

    private void initTable() {
        updateTableSouscripteur();
        updateTableCompagnie();
        updateTableGarantie();
        updateTableCompagnieGarantie();
        updateTableCompagniePolice();
        updateTablePrime();
        updateTableAutomobile();
    }

    private void updateTableSouscripteur() {
        DefaultTableModel model = (DefaultTableModel) table_souscripteur.getModel();
        model.setRowCount(0);
        ArrayList<Souscripteur> list = getController().getSouscripteurController().getSouscripteurs();
        for (int i = 0; i < list.size(); i++) {
            Object colonne[] = new Object[11];
            colonne[0] = i + 1;
            colonne[1] = list.get(i).getNumero_assure();
            colonne[2] = list.get(i).getNom_prenom();
            colonne[3] = list.get(i).getType_piece();
            colonne[4] = list.get(i).getNumero_piece();
            ArrayList<Telephone> telephones = getController().getTelephoneController().getTelephones(list.get(i).getId());
            String tel = "";
            if (telephones.size() > 2) {
                for (int j = 0; j < telephones.size() - 1; j++) {
                    tel += telephones.get(j).getTelephone() + " / ";
                }
                tel += telephones.get(telephones.size() - 1).getTelephone();
            } else if (telephones.size() == 2) {
                tel = telephones.get(0).getTelephone() + " / " + telephones.get(1).getTelephone();
            } else if (telephones.size() == 1) {
                tel = telephones.get(0).getTelephone();
            }

            tel = tel.substring(0, tel.length());
            colonne[5] = tel;
            colonne[6] = list.get(i).getAdresse();
            colonne[7] = list.get(i).getProfession();
            colonne[8] = list.get(i).getPersonnalite();
            colonne[9] = list.get(i).isExempter_taxe();
            colonne[10] = list.get(i).getId();
            model.addRow(colonne);
        }
        table_souscripteur.setModel(model);
    }

    private void updateTableCompagnie() {
        DefaultTableModel model = (DefaultTableModel) table_compagnie.getModel();
        model.setRowCount(0);
        ArrayList<Compagnie> list = getController().getCompagnieController().getCompagnies();
        for (int i = 0; i < list.size(); i++) {
            Object colonne[] = new Object[2];
            colonne[0] = i + 1;
            colonne[1] = list.get(i).getCompagnie();
            model.addRow(colonne);
        }
        table_compagnie.setModel(model);
    }

    private void updateTableGarantie() {
        DefaultTableModel model = (DefaultTableModel) table_garantie.getModel();
        model.setRowCount(0);
        ArrayList<Garantie> list = getController().getGarantieController().getGaranties();
        for (int i = 0; i < list.size(); i++) {
            Object colonne[] = new Object[2];
            colonne[0] = i + 1;
            colonne[1] = list.get(i).getGarantie();
            model.addRow(colonne);
        }
        table_garantie.setModel(model);
    }

    private void updateTableCompagnieGarantie() {
        DefaultTableModel model = (DefaultTableModel) table_compagnie_garantie.getModel();
        model.setRowCount(0);
        if (combo_compagnie.getSelectedIndex() < 0) {
            return;
        }
        long id_compagnie = 0;
        Compagnie compagnie = getController().getCompagnieController().getCompagnie(combo_compagnie.getSelectedItem().toString());
        if (compagnie != null) {
            id_compagnie = compagnie.getId();
        }
        ArrayList<CompagnieGarantie> list = getController().getCompagnieGarantieController().getCompagnieGaranties(id_compagnie);
        for (int i = 0; i < list.size(); i++) {
            Object colonne[] = new Object[5];
            colonne[0] = i + 1;
            colonne[1] = getController().getCompagnieController().getCompagnie(list.get(i).getId_compagnie()).getCompagnie();
            colonne[2] = getController().getGarantieController().getGarantie(list.get(i).getId_garantie()).getGarantie();
            colonne[3] = list.get(i).getMontant();
            colonne[4] = list.get(i).getId();
            model.addRow(colonne);
        }
        if (table_compagnie_garantie.getRowCount() > 0) {
            table_compagnie_garantie.getColumnModel().getColumn(3).setCellRenderer(NumberRenderer.get_FCFA_render());
        }
        table_compagnie_garantie.setModel(model);
    }

    private void updateTableCompagniePolice() {
        DefaultTableModel model = (DefaultTableModel) table_compagnie_police.getModel();
        model.setRowCount(0);
        ArrayList<Police> list = getController().getPoliceController().getPolices();
        for (int i = 0; i < list.size(); i++) {
            Object colonne[] = new Object[5];
            colonne[0] = i + 1;
            colonne[1] = getController().getUsageController().getUsage(list.get(i).getId_usage()).getUsage();
            colonne[2] = getController().getCompagnieController().getCompagnie(list.get(i).getId_compagnie()).getCompagnie();
            colonne[3] = list.get(i).getPolice();
            colonne[4] = list.get(i).getId();
            model.addRow(colonne);
        }
        table_compagnie_police.setModel(model);
    }

    private void updateTableAutomobile() {
        DefaultTableModel model = (DefaultTableModel) table_automobile.getModel();
        model.setRowCount(0);
        ArrayList<Automobile> list = getController().getAutomobileController().getAutomobiles();
        for (int i = 0; i < list.size(); i++) {
            Object colonne[] = new Object[9];
            colonne[0] = i + 1;
            colonne[1] = list.get(i).getNumero_plaque();
            colonne[2] = list.get(i).getType();
            colonne[3] = list.get(i).getMarque();
            colonne[4] = list.get(i).getNumero_chassis();
            colonne[5] = list.get(i).getDate_circulation();
            colonne[6] = list.get(i).getNombre_place();
            colonne[7] = list.get(i).getCharge_utile();
            colonne[8] = list.get(i).getId();
            model.addRow(colonne);
        }
        table_automobile.setModel(model);
    }

    private void ajout_souscripteur() {
        if (!getController().getDroitController().getDroit(getUser().getId()).isEcriture()) {
            droit_ajout();
            return;
        }
        SouscripteurDialog souscripteurDialog = new SouscripteurDialog(null, true);
        souscripteurDialog.setVisible(true);
        updateTableSouscripteur();
    }

    private void ajout_automobile() {
        if (!getController().getDroitController().getDroit(getUser().getId()).isEcriture()) {
            droit_ajout();
            return;
        }
        AutomobileDialog automobileDialog = new AutomobileDialog(null, true);
        automobileDialog.setVisible(true);
        updateTableAutomobile();
    }

    private void ajout_compagnie() {
        if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
            droit_administration();
            return;
        }
        CompagnieDialog compagnieDialog = new CompagnieDialog(null, true);
        compagnieDialog.setVisible(true);
        updateTableCompagnie();
        initCBCompagnie();
    }

    private void suprimer_compagnie(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
                droit_administration();
                return;
            }
            String nom_compagnie = table_compagnie.getValueAt(row, table_compagnie.getColumnCount() - 1).toString();
            Compagnie compagnie = getController().getCompagnieController().getCompagnie(nom_compagnie);
            int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer la compagnie " + compagnie.getCompagnie() + " ?", "Action irrÃ©versible", JOptionPane.YES_NO_OPTION);
            if (choice == 0) {
                getController().getCompagnieController().removeCompagnie(compagnie.getId());
                updateTableCompagnie();
                initCBCompagnie();
            }
        }
    }

    private void suprimer_automobile(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
                droit_administration();
                return;
            }
            Automobile automobile = getController().getAutomobileController().getAutomobile(Long.parseLong(table_automobile.getValueAt(row, table_automobile.getColumnCount() - 1).toString()));
            int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer l'automobile " + automobile.getNumero_plaque() + " ?", "Action irrÃ©versible", JOptionPane.YES_NO_OPTION);
            if (choice == 0) {
                getController().getAutomobileController().removeAutomobile(automobile.getId());
                updateTableAutomobile();
            }
        }
    }

    private void mettre_a_jour_automobile(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
                droit_administration();
                return;
            }
            Automobile automobile = getController().getAutomobileController().getAutomobile(Long.parseLong(table_automobile.getValueAt(row, table_automobile.getColumnCount() - 1).toString()));
            AutomobileDialog automobileDialog = new AutomobileDialog(null, true, automobile);
            automobileDialog.setVisible(true);
            updateTableAutomobile();
        }
    }

    private void mettre_a_jour_compagnie(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
                droit_administration();
                return;
            }
            String compagnie = table_compagnie.getValueAt(row, table_compagnie.getColumnCount() - 1).toString();
            CompagnieDialog compagnieDialog = new CompagnieDialog(null, true, getController().getCompagnieController().getCompagnie(compagnie));
            compagnieDialog.setVisible(true);
            updateTableCompagnie();
            initCBCompagnie();
        }

    }

    private void ajout_garantie() {
        if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
            droit_administration();
            return;
        }
        GarantieDialog garantieDialog = new GarantieDialog(null, true);
        garantieDialog.setVisible(true);
        updateTableGarantie();
    }

    private void mettre_a_jour_garantie(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
                droit_administration();
                return;
            }
            String garantie = table_garantie.getValueAt(row, table_garantie.getColumnCount() - 1).toString();
            GarantieDialog garantieDialog = new GarantieDialog(null, true, getController().getGarantieController().getGarantie(garantie));
            garantieDialog.setVisible(true);
            updateTableGarantie();
        }

    }

    private void suprimer_garantie(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
                droit_administration();
                return;
            }
            String nom_garantie = table_garantie.getValueAt(row, table_garantie.getColumnCount() - 1).toString();
            Garantie garantie = getController().getGarantieController().getGarantie(nom_garantie);
            int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer la garantie " + garantie.getGarantie() + " ?", "Action irrÃ©versible", JOptionPane.YES_NO_OPTION);
            if (choice == 0) {
                getController().getGarantieController().removeGarantie(garantie.getId());
                updateTableGarantie();
            }
        }
    }

    private void ajout_police() {
        if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
            droit_administration();
            return;
        }
        PoliceDialog policeDialog = new PoliceDialog(null, true);
        policeDialog.setVisible(true);
        updateTableCompagniePolice();
    }

    private void mettre_a_jour_police(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
                droit_administration();
                return;
            }
            long id_police = Long.parseLong(table_compagnie_police.getValueAt(row, table_compagnie_police.getColumnCount() - 1).toString());
            PoliceDialog policeDialog = new PoliceDialog(null, true, getController().getPoliceController().getPolice(id_police));
            policeDialog.setVisible(true);
            updateTableCompagniePolice();
        }

    }

    private void suprimer_police(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
                droit_administration();
                return;
            }
            long id_police = Long.parseLong(table_compagnie_police.getValueAt(row, table_compagnie_police.getColumnCount() - 1).toString());
            Police police = getController().getPoliceController().getPolice(id_police);
            int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer le numÃ©ro de police " + police.getPolice() + " ?", "Action irrÃ©versible", JOptionPane.YES_NO_OPTION);
            if (choice == 0) {
                getController().getPoliceController().removePolice(police.getId());
                updateTableGarantie();
            }
        }
    }

    private void ajout_compagnie_garantie() {
        if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
            droit_administration();
            return;
        }
        CompagnieGarantieDialog compagnieGarantieDialog = new CompagnieGarantieDialog(null, true);
        compagnieGarantieDialog.setVisible(true);
        updateTableCompagnieGarantie();
    }

    private void mettre_a_jour_compagnie_garantie(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
                droit_administration();
                return;
            }
            long id_compagnie_garantie = Long.parseLong(table_compagnie_garantie.getValueAt(row, table_compagnie_garantie.getColumnCount() - 1).toString());
            CompagnieGarantieDialog compagnieGarantieDialog = new CompagnieGarantieDialog(null, true, getController().getCompagnieGarantieController().getCompagnieGarantie(id_compagnie_garantie));
            compagnieGarantieDialog.setVisible(true);
            updateTableCompagnieGarantie();
        }

    }

    private void suprimer_compagnie_garantie(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isAdministration()) {
                droit_administration();
                return;
            }
            long id_compagnie_garantie = Long.parseLong(table_compagnie_garantie.getValueAt(row, table_compagnie_garantie.getColumnCount() - 1).toString());
            CompagnieGarantie compagnieGarantie = getController().getCompagnieGarantieController().getCompagnieGarantie(id_compagnie_garantie);
            int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer le montant " + compagnieGarantie.getMontant() + " ?", "Action irrÃ©versible", JOptionPane.YES_NO_OPTION);
            if (choice == 0) {
                getController().getCompagnieGarantieController().removeCompagnieGarantie(compagnieGarantie.getId());
                updateTableCompagnieGarantie();
            }
        }
    }

    private void updateTablePrime() {
        DefaultTableModel model = (DefaultTableModel) table_prime.getModel();
        model.setRowCount(0);
        if (combo_classe.getSelectedIndex() < 0 || combo_prime_usage.getSelectedIndex() < 0 || combo_groupe.getSelectedIndex() < 0 || combo_zone.getSelectedIndex() < 0 || combo_puissance.getSelectedIndex() < 0 || combo_energie.getSelectedIndex() < 0) {
            return;
        }
        long id_usage = 0, id_classe = 0, id_groupe = 0, id_zone = 0, id_energie = 0, id_puissance = 0;
        Usage usage = getController().getUsageController().getUsage(combo_prime_usage.getSelectedItem().toString());
        if (usage != null) {
            id_usage = usage.getId();
        }
        Classe classe;
        try {
            classe = getController().getClasseController().getClasse(Long.parseLong(combo_classe.getSelectedItem().toString()));
        } catch (NumberFormatException e) {
            classe = null;
        }
        if (classe != null) {
            id_classe = classe.getId();
        }
        Groupe groupe;
        try {
            groupe = getController().getGroupeController().getGroupe(Long.parseLong(combo_groupe.getSelectedItem().toString()));
        } catch (NumberFormatException e) {
            groupe = null;
        }
        if (groupe != null) {
            id_groupe = groupe.getId();
        }
        Zone zone = getController().getZoneController().getZone(combo_zone.getSelectedItem().toString());
        if (zone != null) {
            id_zone = zone.getId();
        }
        Energie energie = getController().getEnergieController().getEnergie(combo_energie.getSelectedItem().toString());
        if (energie != null) {
            id_energie = energie.getId();
        }
        int type = 0;
        if (radio_btn_vehicule.isSelected()) {
            type = 1;
            VehiculeMoteur vehiculeMoteur = getController().getVehiculeMoteurController().getVehiculeMoteur(combo_puissance.getSelectedItem().toString());
            if (vehiculeMoteur != null) {
                id_puissance = vehiculeMoteur.getId();
            }
        }
        if (radio_btn_moto.isSelected()) {
            type = 2;
            MotoMoteur motoMoteur = getController().getMotoMoteurController().getMotoMoteur(combo_puissance.getSelectedItem().toString());
            if (motoMoteur != null) {
                id_puissance = motoMoteur.getId();
            }
        }
        ArrayList<Tarif> list = getController().getTarifController().getTarifs(id_classe, id_groupe, id_zone, id_usage, id_puissance, id_energie, type);
        for (int i = 0; i < list.size(); i++) {
            Object colonne[] = new Object[9];
            colonne[0] = i + 1;
            colonne[1] = getController().getUsageController().getUsage(list.get(i).getId_usage()).getUsage();
            colonne[2] = getController().getClasseController().getClasse(list.get(i).getId_classe()).getId();
            colonne[3] = getController().getGroupeController().getGroupe(list.get(i).getId_groupe()).getId();
            colonne[4] = getController().getZoneController().getZone(list.get(i).getId_zone()).getZone();
            if (getController().getTarifController().getVehiculeController().getVehicule(list.get(i).getId()) != null) {
                colonne[5] = getController().getVehiculeMoteurController().getVehiculeMoteur(getController().getTarifController().getVehiculeController().getVehicule(list.get(i).getId()).getId_puissance()).getPuissance();
                colonne[6] = getController().getEnergieController().getEnergie(getController().getVehiculeMoteurController().getVehiculeMoteur(getController().getTarifController().getVehiculeController().getVehicule(list.get(i).getId()).getId_puissance()).getId_energie()).getEnergie();
            } else {
                colonne[5] = getController().getMotoMoteurController().getMotoMoteur(getController().getTarifController().getMotoController().getMoto(list.get(i).getId()).getId_puissance()).getPuissance();
                colonne[6] = "";
            }
            colonne[7] = list.get(i).getTarif();
            colonne[8] = list.get(i).getId();
            model.addRow(colonne);
        }
        if (table_prime.getRowCount() > 0) {
            table_prime.getColumnModel().getColumn(7).setCellRenderer(NumberRenderer.get_FCFA_render());
        }
        table_prime.setModel(model);
    }

    private void mettre_a_jour_souscripteur(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isModification()) {
                droit_modification();
                return;
            }
            Souscripteur souscripteur = getController().getSouscripteurController().getSouscripteur(Long.parseLong(table_souscripteur.getValueAt(row, table_souscripteur.getColumnCount() - 1).toString()));
            SouscripteurDialog souscripteurDialog = new SouscripteurDialog(null, true, souscripteur);
            souscripteurDialog.setVisible(true);
            updateTableSouscripteur();
        }
    }

    private void suprimer_souscripteur(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isSupression()) {
                droit_supression();
                return;
            }
            Souscripteur souscripteur = getController().getSouscripteurController().getSouscripteur(Long.parseLong(table_souscripteur.getValueAt(row, table_souscripteur.getColumnCount() - 1).toString()));
            int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer le souscripteur " + souscripteur.getNom_prenom() + " ?", "Action irrÃ©versible", JOptionPane.YES_NO_OPTION);
            if (choice == 0) {
                getController().getSouscripteurController().removeSouscripteur(souscripteur.getId());
                updateTableSouscripteur();
            }
        }
    }

    private void initCBPrimeUsage() {
        combo_prime_usage.removeAllItems();
        combo_prime_usage.addItem("Tous");
        getController().getUsageController().getUsages().forEach((u) -> {
            combo_prime_usage.addItem(u.getUsage());
        });
    }

    private void initCBCompagnieUsage() {
        combo_compagnie_usage.removeAllItems();
        combo_compagnie_usage.addItem("Tous");
        getController().getUsageController().getUsages().forEach((u) -> {
            combo_compagnie_usage.addItem(u.getUsage());
        });
    }

    private void initCBClasse() {
        combo_classe.removeAllItems();
        combo_classe.addItem("Toutes");
        getController().getClasseController().getClasses().forEach((c) -> {
            combo_classe.addItem("" + c.getId());
        });
    }

    private void initCBGroupe() {
        combo_groupe.removeAllItems();
        combo_groupe.addItem("Tous");
        getController().getGroupeController().getGroupes().forEach((g) -> {
            combo_groupe.addItem("" + g.getId());
        });
    }

    private void initCBZone() {
        combo_zone.removeAllItems();
        combo_zone.addItem("Toutes");
        getController().getZoneController().getZones().forEach((z) -> {
            combo_zone.addItem(z.getZone());
        });
    }

    private void initCBEnergie() {
        combo_energie.removeAllItems();
        combo_energie.addItem("Toutes");
        getController().getEnergieController().getEnergies().forEach((e) -> {
            combo_energie.addItem(e.getEnergie());
        });
    }

    private void initCBCompagnie() {
        combo_compagnie.removeAllItems();
        getController().getCompagnieController().getCompagnies().forEach((c) -> {
            combo_compagnie.addItem(c.getCompagnie());
        });
    }

    private void initCBPuissance() {
        combo_puissance.removeAllItems();
        combo_puissance.addItem("Toutes");
        if (radio_btn_vehicule.isSelected()) {
            long id_energie = 0;
            if (combo_energie.getSelectedIndex() > -1) {
                if (getController().getEnergieController().getEnergie(combo_energie.getSelectedItem().toString()) != null) {
                    id_energie = getController().getEnergieController().getEnergie(combo_energie.getSelectedItem().toString()).getId();
                }
            }

            getController().getVehiculeMoteurController().getVehiculeMoteurs(id_energie).forEach((p) -> {
                combo_puissance.addItem(p.getPuissance());
            });
        }
        if (radio_btn_moto.isSelected()) {
            getController().getMotoMoteurController().getMotoMoteurs().forEach((p) -> {
                combo_puissance.addItem(p.getPuissance());
            });
        }
    }

    private void initCB() {
        initCBPrimeUsage();
        initCBCompagnieUsage();
        initCBClasse();
        initCBGroupe();
        initCBZone();
        initCBEnergie();
        initCBPuissance();
        initCBCompagnie();
    }

    private void droit_ajout() {
        JOptionPane.showMessageDialog(this, "Droit d'ajout est rÃ©quiert pour effectuer cette opÃ©ration. ", "Droit d'ajout !", JOptionPane.INFORMATION_MESSAGE);
    }

    private void droit_saisie() {
        JOptionPane.showMessageDialog(this, "Droit d'ecriture est rÃ©quiert pour effectuer cette opÃ©ration. ", "Droit d'ecriture !", JOptionPane.INFORMATION_MESSAGE);
    }

    private void droit_modification() {
        JOptionPane.showMessageDialog(this, "Droit de modification est rÃ©quiert pour effectuer cette opÃ©ration. ", "Droit de modification !", JOptionPane.INFORMATION_MESSAGE);
    }

    private void droit_supression() {
        JOptionPane.showMessageDialog(this, "Droit de supression est rÃ©quiert pour effectuer cette opÃ©ration. ", "Droit de supression !", JOptionPane.INFORMATION_MESSAGE);
    }

    private void droit_administration() {
        JOptionPane.showMessageDialog(this, "Droit d'administration est rÃ©quiert pour effectuer cette opÃ©ration. ", "Droit d'administration !", JOptionPane.INFORMATION_MESSAGE);
    }

    private void selection_souscripteur(int row) {
        if (row > -1) {
            if (!getController().getDroitController().getDroit(getUser().getId()).isEcriture()) {
                droit_saisie();
                return;
            }
            try {
                id_souscripteur = Long.parseLong(table_souscripteur.getValueAt(row, table_souscripteur.getColumnCount() - 1).toString());
            } catch (NumberFormatException e) {
                id_souscripteur = 0;
            }

            textField_nouvelle_saisie_numero_assure.setText(table_souscripteur.getValueAt(row, 1).toString());
            textField_nouvelle_saisie_nom_prenom.setText(table_souscripteur.getValueAt(row, 2).toString());
            textField_nouvelle_saisie_numero_telephone.setText(table_souscripteur.getValueAt(row, 5).toString());
            JOptionPane.showMessageDialog(this, "Souscripteur selectionnÃ© avec success ", "OpÃ©ration success !", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private double calcul_taux_periode() {
        try {
            LocalDate date_effet = LocalDate.of(
                    calendar_prise_effet.getCalendar().get(Calendar.YEAR),
                    calendar_prise_effet.getCalendar().get(Calendar.MONTH),
                    calendar_prise_effet.getCalendar().get(Calendar.DAY_OF_MONTH)
            );
            LocalDate date_echeance = LocalDate.of(
                    calendar_echeance.getCalendar().get(Calendar.YEAR),
                    calendar_echeance.getCalendar().get(Calendar.MONTH),
                    calendar_echeance.getCalendar().get(Calendar.DAY_OF_MONTH)
            );
            Period period = Period.between(date_effet, date_echeance);
            textField_nouvelle_saisie_periode.setText(period.getDays() + " jour(s), " + period.getMonths() + " mois, " + period.getYears() + " an(s).");
            if (period.getYears() > 1) {
                return 0.00;
            }
            if (period.getYears() == 1) {
                return 1.00;
            }
            if (period.getMonths() > 9 && period.getMonths() < 12) {
                return 1.00;
            }
            if (period.getMonths() == 9) {
                return 0.90;
            }
            if (period.getMonths() == 8) {
                return 0.76;
            }
            if (period.getMonths() == 7) {
                return 0.68;
            }
            if (period.getMonths() == 6) {
                return 0.60;
            }
            if (period.getMonths() == 5) {
                return 0.44;
            }
            if (period.getMonths() == 4) {
                return 0.36;
            }
            if (period.getMonths() == 3) {
                return 0.30;
            }
            if (period.getMonths() == 2) {
                return 0.25;
            }
            if (period.getMonths() == 1) {
                return 0.20;
            }
            if (period.getDays() > 10 && period.getDays() < 21) {
                return 0.16;
            }
            if (period.getDays() > 5 && period.getDays() < 11) {
                return 0.12;
            }
            if (period.getDays() > 0 && period.getDays() < 6) {
                return 0.07;
            }
        } catch (Exception e) {
        }
        return 0.00;
    }

    private void updatetableSaisieGarantie() {
        DefaultTableModel model = (DefaultTableModel) table_nouvelle_saisie_garantie.getModel();
        model.setRowCount(0);
        for (int i = 0; i < id_automobiles.size(); i++) {
            Object colonne[] = new Object[4];
            String message = id_automobiles.size() == 1 ? "" : i + 1 + "";
            colonne[0] = model.getRowCount() + 1;
            colonne[1] = "RC " + message;
            colonne[2] = getController().getTarifController().getTarif(getController().getAutomobileController().getAutomobile(id_automobiles.get(i)).getId_tarif()).getTarif() * calcul_taux_periode();
            colonne[3] = getController().getAutomobileController().getAutomobile(id_automobiles.get(i)).getId_tarif();
            model.addRow(colonne);
        }
        for (int i = 0; i < id_compagnie_garanties.size(); i++) {
            Object colonne[] = new Object[4];
            colonne[0] = model.getRowCount() + 1;
            colonne[1] = getController().getGarantieController().getGarantie(getController().getCompagnieGarantieController().getCompagnieGarantie(id_compagnie_garanties.get(i)).getId_garantie()).getGarantie();
            colonne[2] = getController().getCompagnieGarantieController().getCompagnieGarantie(id_compagnie_garanties.get(i)).getMontant();
            colonne[3] = id_compagnie_garanties.get(i);
            model.addRow(colonne);
        }
        if (table_nouvelle_saisie_garantie.getRowCount() > 0) {
            table_nouvelle_saisie_garantie.getColumnModel().getColumn(2).setCellRenderer(NumberRenderer.get_FCFA_render());
        }
        table_nouvelle_saisie_garantie.setModel(model);
    }

    private void mono_information() {
        JOptionPane.showMessageDialog(this, "Impossible de selectionner plus d'une auto en mode mono. ", "Erreur selection !", JOptionPane.ERROR_MESSAGE);
    }
}
