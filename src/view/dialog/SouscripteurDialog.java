/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.dialog;

import bean.Souscripteur;
import bean.Telephone;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import static main.Assurances.getController;

/**
 *
 * @author ATH
 */
public class SouscripteurDialog extends javax.swing.JDialog {

    /**
     * Creates new form SouscripteurDialog
     *
     * @param parent
     * @param modal
     */
    public SouscripteurDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initPop();
    }

    public SouscripteurDialog(java.awt.Frame parent, boolean modal, Souscripteur souscripteur) {
        super(parent, modal);
        this.souscripteur = souscripteur;
        initComponents();
        initPop();
        updateTableTelephone();
        try {
            textField_numero_assure.setText(this.souscripteur.getNumero_assure());
            textField_nom_prenom.setText(this.souscripteur.getNom_prenom());
            combo_type_piece.setSelectedItem(this.souscripteur.getType_piece());
            textField_numero_piece.setText(this.souscripteur.getNumero_piece());
            textField_profession.setText(this.souscripteur.getProfession());
            textArea_adresse.setText(this.souscripteur.getAdresse());
            combo_personalite.setSelectedItem(this.souscripteur.getPersonnalite());
            check_exempter_taxe.setSelected(this.souscripteur.isExempter_taxe());
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup = new javax.swing.JPopupMenu();
        popup_menu_add = new javax.swing.JMenuItem();
        popup_menu_remove = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        textField_numero_assure = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textField_nom_prenom = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        combo_type_piece = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        textField_numero_piece = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        textField_profession = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea_adresse = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        combo_personalite = new javax.swing.JComboBox<>();
        check_exempter_taxe = new javax.swing.JCheckBox();
        cancel_btn = new javax.swing.JButton();
        ok_btn = new javax.swing.JButton();
        scrollPane_telephone = new javax.swing.JScrollPane();
        table_telephone = new javax.swing.JTable();

        popup_menu_add.setText("Ajouter numéro");
        popup_menu_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_addActionPerformed(evt);
            }
        });
        popup.add(popup_menu_add);

        popup_menu_remove.setText("Retirer numéro");
        popup_menu_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_removeActionPerformed(evt);
            }
        });
        popup.add(popup_menu_remove);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion Souscripteurs");
        setModal(true);
        setResizable(false);

        jLabel1.setText("Numéro assuré");

        jLabel2.setText("Nom et Prénom");

        jLabel3.setText("Type pièce");

        combo_type_piece.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Carte d'identité", "Permis de conduire", "Passport", "Autre" }));

        jLabel4.setText("Numéro pièce");

        jLabel5.setText("Profession");

        jLabel6.setText("Adresse");

        textArea_adresse.setColumns(20);
        textArea_adresse.setRows(5);
        jScrollPane1.setViewportView(textArea_adresse);

        jLabel7.setText("Personalié");

        combo_personalite.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Physique", "Morale" }));

        check_exempter_taxe.setText("Exempter de taxe");

        cancel_btn.setText("CANCEL");

        ok_btn.setText("OK");
        ok_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ok_btnActionPerformed(evt);
            }
        });

        table_telephone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "Téléphone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollPane_telephone.setViewportView(table_telephone);
        if (table_telephone.getColumnModel().getColumnCount() > 0) {
            table_telephone.getColumnModel().getColumn(0).setMinWidth(35);
            table_telephone.getColumnModel().getColumn(0).setPreferredWidth(35);
            table_telephone.getColumnModel().getColumn(0).setMaxWidth(35);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_type_piece, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textField_nom_prenom)
                    .addComponent(textField_numero_assure)
                    .addComponent(textField_profession)
                    .addComponent(textField_numero_piece)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(check_exempter_taxe)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(combo_personalite, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ok_btn)
                        .addGap(18, 18, 18)
                        .addComponent(cancel_btn))
                    .addComponent(scrollPane_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textField_numero_assure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(textField_nom_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(combo_type_piece, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(textField_numero_piece, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(textField_profession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(scrollPane_telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(combo_personalite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(check_exempter_taxe)
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancel_btn)
                            .addComponent(ok_btn))
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void popup_menu_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_addActionPerformed
        TelephoneDialog telephoneDialog = new TelephoneDialog(null, true);
        telephoneDialog.setVisible(true);
    }//GEN-LAST:event_popup_menu_addActionPerformed

    private void popup_menu_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popup_menu_removeActionPerformed
        if (table_telephone.getSelectedRow() > -1) {
            removeInTable(table_telephone.getValueAt(table_telephone.getSelectedRow(), 1).toString());
        }
    }//GEN-LAST:event_popup_menu_removeActionPerformed

    private void ok_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ok_btnActionPerformed
        ajouter_souscripteur();
    }//GEN-LAST:event_ok_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            SouscripteurDialog dialog = new SouscripteurDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    private Souscripteur souscripteur;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel_btn;
    private javax.swing.JCheckBox check_exempter_taxe;
    private javax.swing.JComboBox<String> combo_personalite;
    private javax.swing.JComboBox<String> combo_type_piece;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton ok_btn;
    private javax.swing.JPopupMenu popup;
    private javax.swing.JMenuItem popup_menu_add;
    private javax.swing.JMenuItem popup_menu_remove;
    private javax.swing.JScrollPane scrollPane_telephone;
    private static javax.swing.JTable table_telephone;
    private javax.swing.JTextArea textArea_adresse;
    private javax.swing.JTextField textField_nom_prenom;
    private javax.swing.JTextField textField_numero_assure;
    private javax.swing.JTextField textField_numero_piece;
    private javax.swing.JTextField textField_profession;
    // End of variables declaration//GEN-END:variables

    public static JTable getTable_telephone() {
        return table_telephone;
    }

    public static void setTable_telephone(JTable table_telephone) {
        SouscripteurDialog.table_telephone = table_telephone;
    }

    private static void addPopup(Component component, final JPopupMenu popup) {
        component.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    showMenu(e);
                }
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    showMenu(e);
                }
            }

            private void showMenu(MouseEvent e) {
                popup.show(e.getComponent(), e.getX(), e.getY());
            }
        });
    }

    private void initPop() {
        addPopup(table_telephone, popup);
        addPopup(scrollPane_telephone, popup);
    }

    private void removeInTable(String telephone) {
        DefaultTableModel model = (DefaultTableModel) SouscripteurDialog.getTable_telephone().getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 1).toString().equals(telephone)) {
                model.removeRow(i);
                break;
            }
        }
        table_telephone.setModel(model);
    }

    private void updateTableTelephone() {
        if (souscripteur == null) {
            return;
        }
        DefaultTableModel model = (DefaultTableModel) table_telephone.getModel();
        model.setRowCount(0);
        ArrayList<Telephone> list = getController().getTelephoneController().getTelephones(souscripteur.getId());
        for (int i = 0; i < list.size(); i++) {
            Object colonne[] = new Object[2];
            colonne[0] = i + 1;
            colonne[1] = list.get(i).getTelephone();
            model.addRow(colonne);
        }
        table_telephone.setModel(model);
    }

    private void ajouter_souscripteur() {
        if (textField_numero_assure.getText().isBlank() || textField_nom_prenom.getText().isBlank() || textField_numero_piece.getText().isBlank() || combo_type_piece.getSelectedIndex() < 0 || combo_personalite.getSelectedIndex() < 0) {
            warning_information();
            return;
        }

        if (souscripteur == null) {
            if (getController().getSouscripteurController().getSouscripteur(textField_numero_assure.getText()) != null) {
                erreur_information();
                return;
            }
            getController().getSouscripteurController().addSouscripteur(
                    textField_numero_assure.getText(),
                    textField_nom_prenom.getText(),
                    combo_type_piece.getSelectedItem().toString(),
                    textField_numero_piece.getText(),
                    textArea_adresse.getText(),
                    textField_profession.getText(),
                    combo_personalite.getSelectedItem().toString(),
                    check_exempter_taxe.isSelected()
            );
            DefaultTableModel model = (DefaultTableModel) table_telephone.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                getController().getTelephoneController().addTelephone(
                        getController().getSouscripteurController().getMaxID(),
                        model.getValueAt(i, 1).toString()
                );
            }
        } else {
            getController().getSouscripteurController().updateSouscripteur(
                    souscripteur.getId(),
                    textField_numero_assure.getText(),
                    textField_nom_prenom.getText(),
                    combo_type_piece.getSelectedItem().toString(),
                    textField_numero_piece.getText(),
                    textArea_adresse.getText(),
                    textField_profession.getText(),
                    combo_personalite.getSelectedItem().toString(),
                    check_exempter_taxe.isSelected()
            );
            getController().getTelephoneController().removeAllTelephone(souscripteur.getId());
            DefaultTableModel model = (DefaultTableModel) table_telephone.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                getController().getTelephoneController().addTelephone(
                        souscripteur.getId(),
                        model.getValueAt(i, 1).toString()
                );
            }

        }
        success_information();
        dispose();
    }

    private void success_information() {
        JOptionPane.showMessageDialog(this, "Opération effectuée avec success ", "Réussie !", JOptionPane.INFORMATION_MESSAGE);
    }

    private void warning_information() {
        JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs ", "Champ vide ou manquant !", JOptionPane.WARNING_MESSAGE);
    }

    private void erreur_information() {
        JOptionPane.showMessageDialog(this, "Veuillez mettre de nouvelles données ", "Champ existant ou erroné !", JOptionPane.ERROR_MESSAGE);
    }
}
