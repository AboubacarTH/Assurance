/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.dialog;

import bean.Moto;
import bean.Tarif;
import bean.Vehicule;
import javax.swing.JOptionPane;
import static main.Assurances.getController;

/**
 *
 * @author ATH
 */
public class TarifDialog extends javax.swing.JDialog {

    /**
     * Creates new form ClasseDialog
     *
     * @param parent
     * @param modal
     */
    public TarifDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initCB();
    }

    public TarifDialog(java.awt.Frame parent, boolean modal, Tarif tarif) {
        super(parent, modal);
        this.tarif = tarif;
        initComponents();
        initCB();
        try {
            combo_classe.setSelectedItem(getController().getClasseController().getClasse(this.tarif.getId_classe()).getId());
            combo_groupe.setSelectedItem(getController().getGroupeController().getGroupe(this.tarif.getId_groupe()).getId());
            combo_zone.setSelectedItem(getController().getZoneController().getZone(this.tarif.getId_zone()).getZone());
            combo_zone.setSelectedItem(getController().getZoneController().getZone(this.tarif.getId_zone()).getZone());
            combo_usage.setSelectedItem(getController().getUsageController().getUsage(this.tarif.getId_usage()).getUsage());
            if (getController().getTarifController().getVehiculeController().getVehicule(this.tarif.getId()) != null) {
                radio_btn_vehicule.setSelected(true);
                combo_puissance.setSelectedItem(getController().getVehiculeMoteurController().getVehiculeMoteur(getController().getTarifController().getVehiculeController().getVehicule(this.tarif.getId()).getId_puissance()).getPuissance());
            } else {
                radio_btn_moto.setSelected(true);
                combo_puissance.setSelectedItem(getController().getMotoMoteurController().getMotoMoteur(getController().getTarifController().getMotoController().getMoto(this.tarif.getId()).getId_puissance()).getPuissance());
            }
            textField_tarif.setText("" + this.tarif.getTarif());
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        btn_cancel = new javax.swing.JButton();
        btn_ok = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        combo_classe = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        combo_groupe = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        combo_zone = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        combo_usage = new javax.swing.JComboBox<>();
        radio_btn_vehicule = new javax.swing.JRadioButton();
        radio_btn_moto = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        combo_energie = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        combo_puissance = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        textField_tarif = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion Tarif");
        setModal(true);
        setResizable(false);

        btn_cancel.setText("CANCEL");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        btn_ok.setText("OK");
        btn_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_okActionPerformed(evt);
            }
        });

        jLabel2.setText("Classe");

        combo_classe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Groupe");

        combo_groupe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Zone");

        combo_zone.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Usage");

        combo_usage.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroup.add(radio_btn_vehicule);
        radio_btn_vehicule.setSelected(true);
        radio_btn_vehicule.setText("VÃ©hicule");
        radio_btn_vehicule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_btn_vehiculeActionPerformed(evt);
            }
        });

        buttonGroup.add(radio_btn_moto);
        radio_btn_moto.setText("Moto");
        radio_btn_moto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_btn_motoActionPerformed(evt);
            }
        });

        jLabel6.setText("Energie");

        combo_energie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_energie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_energieActionPerformed(evt);
            }
        });

        jLabel7.setText("Puissance");

        combo_puissance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Tarif");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_ok)
                        .addGap(18, 18, 18)
                        .addComponent(btn_cancel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(combo_usage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radio_btn_vehicule)
                        .addGap(18, 18, 18)
                        .addComponent(radio_btn_moto)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(combo_energie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(combo_puissance, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(combo_classe, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(combo_groupe, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(combo_zone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textField_tarif, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(combo_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(combo_groupe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(combo_zone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_usage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_btn_vehicule)
                    .addComponent(radio_btn_moto)
                    .addComponent(jLabel6)
                    .addComponent(combo_energie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(combo_puissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textField_tarif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancel)
                    .addComponent(btn_ok))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_okActionPerformed
        ajouter_usage();
    }//GEN-LAST:event_btn_okActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void radio_btn_vehiculeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_btn_vehiculeActionPerformed
        initCBPuissance();
        combo_energie.setEnabled(radio_btn_vehicule.isSelected());
    }//GEN-LAST:event_radio_btn_vehiculeActionPerformed

    private void radio_btn_motoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_btn_motoActionPerformed
        initCBPuissance();
        combo_energie.setEnabled(radio_btn_vehicule.isSelected());
    }//GEN-LAST:event_radio_btn_motoActionPerformed

    private void combo_energieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_energieActionPerformed
        initCBPuissance();
    }//GEN-LAST:event_combo_energieActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            TarifDialog dialog = new TarifDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    private Tarif tarif;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_ok;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JComboBox<String> combo_classe;
    private javax.swing.JComboBox<String> combo_energie;
    private javax.swing.JComboBox<String> combo_groupe;
    private javax.swing.JComboBox<String> combo_puissance;
    private javax.swing.JComboBox<String> combo_usage;
    private javax.swing.JComboBox<String> combo_zone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton radio_btn_moto;
    private javax.swing.JRadioButton radio_btn_vehicule;
    private javax.swing.JTextField textField_tarif;
    // End of variables declaration//GEN-END:variables
    private void ajouter_usage() {
        if (textField_tarif.getText().isBlank() || combo_classe.getSelectedIndex() < 0 || combo_energie.getSelectedIndex() < 0 || combo_groupe.getSelectedIndex() < 0 || combo_puissance.getSelectedIndex() < 0 || combo_usage.getSelectedIndex() < 0 || combo_zone.getSelectedIndex() < 0) {
            warning_information();
            return;
        }
        double cout;
        try {
            cout = Double.parseDouble(textField_tarif.getText());
        } catch (NumberFormatException e) {
            warning_information();
            return;
        }
        long id_classe = getController().getClasseController().getClasse(Long.parseLong(combo_classe.getSelectedItem().toString())).getId();
        long id_groupe = getController().getGroupeController().getGroupe(Long.parseLong(combo_groupe.getSelectedItem().toString())).getId();
        long id_zone = getController().getZoneController().getZone(combo_zone.getSelectedItem().toString()).getId();
        long id_usage = getController().getUsageController().getUsage(combo_usage.getSelectedItem().toString()).getId();
        long id_energie = getController().getEnergieController().getEnergie(combo_energie.getSelectedItem().toString()).getId();

        if (radio_btn_vehicule.isSelected()) {
            long id_puissance_vehicule = getController().getVehiculeMoteurController().getVehiculeMoteur(combo_puissance.getSelectedItem().toString()).getId();
            if (getController().getTarifController().getTarif(id_classe, id_groupe, id_zone, id_usage, id_puissance_vehicule, id_energie) != null) {
                erreur_information();
                return;
            }
            if (tarif == null) {
                getController().getTarifController().addTarif(
                        id_classe,
                        id_groupe,
                        id_zone,
                        id_usage,
                        cout,
                        new Vehicule(0, id_puissance_vehicule)
                );
            } else {
                getController().getTarifController().updateTarif(
                        tarif.getId(),
                        id_classe,
                        id_groupe,
                        id_zone,
                        id_usage,
                        cout,
                        new Vehicule(0, id_puissance_vehicule)
                );
            }
        } else {
            long id_puissance_moto = getController().getMotoMoteurController().getMotoMoteur(combo_puissance.getSelectedItem().toString()).getId();
            if (getController().getTarifController().getTarif(id_classe, id_groupe, id_zone, id_usage, id_puissance_moto) != null) {
                erreur_information();
                return;
            }

            if (tarif == null) {
                getController().getTarifController().addTarif(
                        id_classe,
                        id_groupe,
                        id_zone,
                        id_usage,
                        cout,
                        new Moto(0, id_puissance_moto)
                );
            } else {
                getController().getTarifController().updateTarif(
                        tarif.getId(),
                        id_classe,
                        id_groupe,
                        id_zone,
                        id_usage,
                        cout,
                        new Moto(0, id_puissance_moto)
                );
            }
        }
        success_information();
        //dispose();
    }

    private void success_information() {
        JOptionPane.showMessageDialog(this, "OpÃ©ration effectuÃ©e avec success ", "RÃ©ussie !", JOptionPane.INFORMATION_MESSAGE);
    }

    private void warning_information() {
        JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs ", "Champ vide ou manquant !", JOptionPane.WARNING_MESSAGE);
    }

    private void erreur_information() {
        JOptionPane.showMessageDialog(this, "Veuillez mettre de nouvelles donnÃ©es ", "Champ existant ou erronÃ© !", JOptionPane.ERROR_MESSAGE);
    }

    private void initCBUsage() {
        combo_usage.removeAllItems();
        getController().getUsageController().getUsages().forEach((u) -> {
            combo_usage.addItem(u.getUsage());
        });
    }

    private void initCBClasse() {
        combo_classe.removeAllItems();
        getController().getClasseController().getClasses().forEach((c) -> {
            combo_classe.addItem("" + c.getId());
        });
    }

    private void initCBGroupe() {
        combo_groupe.removeAllItems();
        getController().getGroupeController().getGroupes().forEach((g) -> {
            combo_groupe.addItem("" + g.getId());
        });
    }

    private void initCBZone() {
        combo_zone.removeAllItems();
        getController().getZoneController().getZones().forEach((z) -> {
            combo_zone.addItem(z.getZone());
        });
    }

    private void initCBEnergie() {
        combo_energie.removeAllItems();
        getController().getEnergieController().getEnergies().forEach((e) -> {
            combo_energie.addItem(e.getEnergie());
        });
    }

    private void initCBPuissance() {
        combo_puissance.removeAllItems();
        if (radio_btn_vehicule.isSelected()) {
            long id_energie = 0;
            if (combo_energie.getSelectedIndex() > -1) {
                if (getController().getEnergieController().getEnergie(combo_energie.getSelectedItem().toString()) != null) {
                    id_energie = getController().getEnergieController().getEnergie(combo_energie.getSelectedItem().toString()).getId();
                }
            }

            getController().getVehiculeMoteurController().getVehiculeMoteurs(id_energie).forEach((p) -> {
                combo_puissance.addItem(p.getPuissance());
            });
        }
        if (radio_btn_moto.isSelected()) {
            getController().getMotoMoteurController().getMotoMoteurs().forEach((p) -> {
                combo_puissance.addItem(p.getPuissance());
            });
        }
    }

    private void initCB() {
        initCBUsage();
        initCBClasse();
        initCBGroupe();
        initCBZone();
        initCBEnergie();
        initCBPuissance();
    }
}
